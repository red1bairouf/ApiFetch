{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","products","loading","axios","get","res","console","log","data","this","setState","getUsersData","columns","Header","accessor","filterable","filterMethod","filter","row","value","id","Filter","onChange","event","target","style","width","Cell","height","src","original","thumbnail","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAKqBA,G,wDACnB,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,SAAU,GACVC,SAAQ,GAJM,E,2LAQEC,IAAMC,IAAI,0C,OAAtBC,E,OACNC,QAAQC,IAAIF,EAAIG,MAChBC,KAAKC,SAAS,CAACR,SAAQ,EAAOD,SAAUI,EAAIG,KAAKP,W,gJAGjDQ,KAAKE,iB,+BAIL,IAAMC,EAAU,CAAC,CACfC,OAAQ,WACRC,SAAU,YAEV,CACAD,OAAQ,KACRC,SAAU,OAGV,CACDD,OAAQ,OACRC,SAAU,QAET,CACDD,OAAQ,cACRC,SAAU,eAEV,CACCD,OAAQ,WACRC,SAAU,WACVC,YAAY,EACZC,aAAc,SAACC,EAAQC,GACrB,MAAqB,QAAjBD,EAAOE,QAGU,oBAAjBF,EAAOE,MACiB,kBAAnBD,EAAID,EAAOG,IAEC,2BAAjBH,EAAOE,MACiB,2BAAnBD,EAAID,EAAOG,SADpB,IAIFC,OAAQ,gBAAGJ,EAAH,EAAGA,OAAQK,EAAX,EAAWA,SAAX,OACN,yBACEA,SAAU,SAAAC,GAAK,OAAID,EAASC,EAAMC,OAAOL,QACzCM,MAAO,CAAEC,MAAO,QAChBP,MAAOF,EAASA,EAAOE,MAAQ,MAHjC,UAKE,wBAAQA,MAAM,MAAd,sBACA,wBAAQA,MAAM,kBAAd,6BACA,wBAAQA,MAAM,yBAAd,yCAIJ,CACEN,OAAQ,cACRC,SAAU,eAEV,CACED,OAAQ,aACRC,SAAU,aAEV,CACED,OAAQ,aACRC,SAAU,aAEV,CACED,OAAQ,WACRC,SAAU,WAEV,CACED,OAAQ,MACRC,SAAU,OAEV,CACED,OAAQ,YACRC,SAAU,aAEV,CACED,OAAQ,OACRC,SAAU,QAEV,CACED,OAAQ,YACRc,KAAM,SAACT,GACL,OAAO,8BAAK,qBAAKU,OAAQ,GAAIC,IAAKX,EAAIY,SAASC,eAEjDjB,SAAU,cAG5B,OACE,cAAC,IAAD,CACAN,KAAMC,KAAKT,MAAMC,SACjBW,QAASA,Q,GArGkBoB,cCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f11b4359.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport ReactTable from \"react-table\"; \nimport 'react-table/react-table.css'\n\nexport default class App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      products: [],\n      loading:true\n    }\n  }\n  async getUsersData(){\n    const res = await axios.get('https://app.getrecall.com/api/products')\n    console.log(res.data)\n    this.setState({loading:false, products: res.data.products})\n  }\n  componentDidMount(){\n    this.getUsersData()\n  }\n\n  render() {\n    const columns = [{  \n      Header: 'Features',  \n      accessor: 'features',\n     }\n     ,{  \n      Header: 'Id',  \n      accessor: '_id' ,\n      }\n     \n     ,{  \n     Header: 'Name',  \n     accessor: 'name' ,\n     }\n     ,{  \n     Header: 'Description',  \n     accessor: 'description',\n     },\n     {  \n      Header: 'Category',  \n      accessor: 'category',\n      filterable: true,\n      filterMethod: (filter, row) => {\n        if (filter.value === \"all\") {\n          return true;\n        }\n        if (filter.value === \"GPU And Edge AI\") {\n          return row[filter.id] === \"GPU & Edge AI\";\n        }\n        if (filter.value === \"Embedded Flash Storage\") {\n          return row[filter.id] === \"Embedded Flash Storage\";\n        }\n      },\n      Filter: ({ filter, onChange }) => (\n        <select\n          onChange={event => onChange(event.target.value)}\n          style={{ width: \"100%\" }}\n          value={filter ? filter.value : \"all\"}\n        >\n          <option value=\"all\">Show All</option>\n          <option value=\"GPU And Edge AI\">GPU And Edge AI</option>\n          <option value=\"Embedded Flash Storage\">Embedded Flash Storage</option>\n        </select>\n      )\n      },\n      {  \n        Header: 'Subcategory',  \n        accessor: 'subcategory',\n        },\n        {  \n          Header: 'Created At',  \n          accessor: 'createdAt',\n          },\n          {  \n            Header: 'Updated At',  \n            accessor: 'updatedAt',\n            },\n            {  \n              Header: 'Model Id',  \n              accessor: 'modelId',\n              },\n              {  \n                Header: 'PID',  \n                accessor: 'pid',\n                },\n                {  \n                  Header: 'Datasheet',  \n                  accessor: 'datasheet',\n                  },\n                  {  \n                    Header: 'Link',  \n                    accessor: 'link',\n                    },\n                    {  \n                      Header: 'Thumbnail',\n                      Cell: (row) => {\n                        return <div><img height={34} src={row.original.thumbnail}/></div>\n                      },\n                      accessor: 'thumbnail',\n                      }\n  ]\n    return (\n      <ReactTable  \n      data={this.state.products}  \n      columns={columns}  \n   />\n    )\n  }\n}\n ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}